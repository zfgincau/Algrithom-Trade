═══════════════════════════════════════════════════════════════
                MT-v6.15 功能实现分析报告
═══════════════════════════════════════════════════════════════

【一、波动系数调整机制】 - ⚠️ 需要修改
------------------------------------------------------------------
当前状态:
  ✓ 已有波动系数系统
  ✗ 数值不符合要求

当前值（行43-46）:
  Weight_250pts = 0.7  → 需要改为 1.2
  Weight_300pts = 0.9  → 需要改为 1.4
  Weight_350pts = 1.2  → 需要改为 1.6
  Weight_400pts = 2.0  → 正确，无需修改

修改位置:
  - 输入参数定义（行43-46）


【二、趋势判断与反转识别算法】 - ✓ 已实现
------------------------------------------------------------------
当前状态:
  ✓ 已有趋势反转识别算法（根据文档）
  ✓ 已有AnalyzeFirstOrderDirection()函数
  ✓ 已有EvaluateFutureTrend()函数

无需修改


【三、手数序列】 - ❌ 需要实现
------------------------------------------------------------------
当前状态:
  ✗ 使用固定InitialLot (0.01)
  ✗ 按固定倍数递增

需要的手数序列:
  第1单: 0.03
  第2单: 0.02
  第3单: 0.04
  第4单: 0.08
  第5单及以后: 前一单的2倍

需要添加:
  - CalculateSmartVolume(int orderIndex)函数
  
需要修改:
  - OpenFirstOrder() 使用CalculateSmartVolume(0)
  - ExecuteSingleTrendStrategy() 使用CalculateSmartVolume()
  - ExecuteHedgeStrategy() 使用CalculateSmartVolume()


【四、休眠机制（基于加单数）】 - ✓ 已实现
------------------------------------------------------------------
当前状态:
  ✓ 已有分级休眠机制（行148-152）
  ✓ 4单休眠5分钟
  ✓ 5单休眠10分钟
  ✓ ≥6单休眠15分钟
  ✓ 已有休眠优先级处理

无需修改


【五、防单边趋势机制（第8单保护）】 - ❌ 需要实现
------------------------------------------------------------------
当前状态:
  ✗ 文档中提到，但代码中未找到实现

需要实现:
  - CheckEighthOrderProtection()函数
  - 触发条件: 已经加到第8单 + 价格超过第8单250点
  - 执行策略: 反向开一单第8单双倍手数的单子
  - 止盈逻辑: 盈利30美刀 → 全局平仓 + 休眠15分钟

需要添加:
  - 全局变量跟踪第8单状态
  - 在ExecuteStrategy()中调用检查函数


【六、临时止盈机制】 - ❓ 需要确认并可能实现
------------------------------------------------------------------
当前状态:
  ? 文档中多次提到，需要搜索代码确认

需要实现的逻辑:
  - 触发条件: 1分钟盈利40%间隔 或 3分钟盈利60%间隔
  - 平仓新加仓单
  - 盈利金额冲减目标
  - 根据实时间隔决定是否重新加仓

需要添加:
  - CheckTempTakeProfit()函数
  - 跟踪最后一单开仓时间和盈利


【七、单边趋势加速防护】 - ❓ 需要确认并可能实现
------------------------------------------------------------------
当前状态:
  ? 文档中提到，需要搜索代码确认

需要实现的逻辑:
  - 触发条件: 计算间隔<200点
  - 检测过去5分钟单边趋势加速
  - 放大加仓间隔(系数1.2-2.0)

需要添加:
  - DetectUnilateralAcceleration()函数
  - 在CalculateDynamicStepPoints()中应用


═══════════════════════════════════════════════════════════════
                        修改计划
═══════════════════════════════════════════════════════════════

1. ✅ 修改波动系数参数
2. ✅ 实现智能手数系统
3. ✅ 实现第8单保护机制
4. ✅ 搜索并确认/实现临时止盈机制
5. ✅ 搜索并确认/实现单边趋势加速防护

═══════════════════════════════════════════════════════════════




